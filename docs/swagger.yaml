basePath: /
definitions:
  dtos.ReqCreateDataUser:
    properties:
      avatar:
        type: string
      email:
        type: string
      first_name:
        minLength: 2
        type: string
      last_name:
        minLength: 2
        type: string
    required:
    - email
    - first_name
    - last_name
    type: object
  dtos.ReqUpdateDataUser:
    properties:
      avatar:
        type: string
      email:
        type: string
      first_name:
        minLength: 2
        type: string
      last_name:
        minLength: 2
        type: string
    type: object
  helper.Response:
    properties:
      data: {}
      errors: {}
      message:
        type: string
      status:
        type: boolean
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server Petstore server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Simple User CRUD
  version: "1.0"
paths:
  /user:
    get:
      parameters:
      - in: query
        name: limit
        required: true
        type: integer
      - in: query
        name: page
        required: true
        type: integer
      - in: query
        name: search
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: API Get Users
      tags:
      - Users
    post:
      consumes:
      - application/json
      parameters:
      - description: content type request
        enum:
        - application/json
        in: header
        name: Content-Type
        required: true
        type: string
      - description: Payload body [RAW]
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.ReqCreateDataUser'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: API Get Users
      tags:
      - Users
  /user/{userid}:
    delete:
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        in: path
        name: userid
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: API Delete Users
      tags:
      - Users
    get:
      parameters:
      - description: User ID
        in: path
        name: userid
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: API Get Users
      tags:
      - Users
    put:
      parameters:
      - description: User ID
        in: path
        name: userid
        required: true
        type: integer
      - description: content type request
        enum:
        - application/json
        in: header
        name: Content-Type
        required: true
        type: string
      - description: Payload body [RAW]
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dtos.ReqUpdateDataUser'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: API Get Users
      tags:
      - Users
  /user/fetch:
    get:
      parameters:
      - in: query
        name: limit
        required: true
        type: integer
      - in: query
        name: page
        required: true
        type: integer
      - in: query
        name: search
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: API Get Users Fetch
      tags:
      - Users
swagger: "2.0"
