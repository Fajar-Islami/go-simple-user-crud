package main

import (
	"net/http"

	"github.com/labstack/echo/v4"

	_ "github.com/Fajar-Islami/go-simple-user-crud/docs" // docs is generated by Swag CLI, you have to import it.
	"github.com/Fajar-Islami/go-simple-user-crud/internal/infrastructure/container"
)

// @title Simple User CRUD
// @version 1.0
// @description This is a sample server Petstore server.
// @termsOfService http://swagger.io/terms/

// @contact.name API Support
// @contact.url http://www.swagger.io/support
// @contact.email support@swagger.io

// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html

// @host localhost:8080
// @BasePath /api/v1
func main() {
	container.InitContainer()
	// Create a new Node with a Node number of 1

	// node, err := snowflake.NewNode(1)
	// if err != nil {
	// 	fmt.Println(err)
	// 	return
	// }
	// fmt.Println(node.Generate().Int64())
	// fmt.Println(node.Generate())
	// fmt.Println(node.Generate())

	// e := echo.New()
	// e.Use(middleware.CORS())

	// // Create group
	// g := e.Group("api/v1")

	// g.POST("/get-product", GetProduct)
	// g.POST("/get-product-detail", GetProductDetail)

	// e.GET("/swagger/*", echoSwagger.WrapHandler)

	// e.Logger.Fatal(e.Start(":8080"))
}

type ProductRequest struct {
	ID   int    `json:"id" query:"id" example:"1"`
	Name string `json:"name" query:"name" example:"admin"`
	Desc string `json:"desc" query:"desc" example:"simple desription"`
}

// @Tags Product
// @Summary API Get Product
// @Router /get-product [post]
// @Param Content-Type header string true "content type request" Enums(application/json)
// @Param request body ProductRequest true "Payload body [RAW]"
// @Accept json
// @Produces json
// @Success 200 {array} ProductRequest
// @Failure 400
func GetProduct(c echo.Context) error {
	data := ProductRequest{
		ID:   1,
		Name: "Fajar",
		Desc: "Contoh",
	}

	return c.JSON(http.StatusOK, data)
}

// @Tags Product
// @Summary API Get Product
// @Router /get-product-detail [post]
// @Param Content-Type header string true "content type request" Enums(application/json)
// @Param request body ProductRequest true "Payload body [RAW]"
// @Accept json
// @Produces json
// @Success 200 {array} ProductRequest
// @Failure 400
func GetProductDetail(c echo.Context) error {
	data := ProductRequest{
		ID:   1,
		Name: "Fajar",
		Desc: "Contoh",
	}

	return c.JSON(http.StatusOK, data)
}
